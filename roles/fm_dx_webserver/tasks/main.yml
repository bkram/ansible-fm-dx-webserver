---
- name: Install  nodejs, and npm
  ansible.builtin.apt:
    name:
      - nodejs
      - npm
    state: present
    update_cache: true
  become: true

- name: Download the ZIP file
  ansible.builtin.get_url:
    url: https://github.com/NoobishSVK/fm-dx-webserver/archive/refs/heads/main.zip
    dest: /tmp/fm-dx-webserver-main.zip
    mode: "600"
  delegate_to: localhost

- name: Copy ZIP file to host
  ansible.builtin.copy:
    src: /tmp/fm-dx-webserver-main.zip
    dest: "{{ ansible_env.HOME }}/fm-dx-webserver-main.zip"
    mode: "0600"

- name: Unzip the file
  ansible.builtin.unarchive:
    src: "{{ ansible_env.HOME }}/fm-dx-webserver-main.zip"
    dest: "{{ ansible_env.HOME }}/"
    remote_src: true

- name: Add the current user to the audio group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: audio
    append: true
  become: true

- name: Run npm install in the fm-dx-webserver-main directory
  ansible.builtin.command:
    cmd: npm install
    chdir: "{{ ansible_env.HOME }}/fm-dx-webserver-main/"
    creates: "{{ ansible_env.HOME }}/fm-dx-webserver-main/node_modules/.bin"

- name: Check if fm-dx-webserver config file exists
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/fm-dx-webserver-main/config.json"
  register: config_file

- name: Create fm-dx-webserver config on first install
  ansible.builtin.template:
    src: config.json.j2
    dest: "{{ ansible_env.HOME }}/fm-dx-webserver-main/config.json"
    mode: "0644"
  when: not config_file.stat.exists

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  become: true

- name: Deploy fm-dx-webserver.service from template
  ansible.builtin.template:
    src: fm-dx-webserver.service.j2
    dest: /etc/systemd/system/fm-dx-webserver.service
    mode: "0644"
  become: true

- name: Ensure fm-dx-webserver service is started and enabled
  ansible.builtin.systemd:
    name: fm-dx-webserver
    state: started
    enabled: true
  become: true
